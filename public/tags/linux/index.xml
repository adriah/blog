<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on SIGKILL</title>
    <link>https://sigkill.no/tags/linux/</link>
    <description>Recent content in Linux on SIGKILL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>cr4sh@sigkill.no (cr4sh0v3rrid3)</managingEditor>
    <webMaster>cr4sh@sigkill.no (cr4sh0v3rrid3)</webMaster>
    <copyright>cr4sh0v3rrid3 (CC BY 4.0)</copyright>
    <lastBuildDate>Wed, 17 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sigkill.no/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Alacritty terminfo</title>
      <link>https://sigkill.no/blog/alacritty_terminfo/</link>
      <pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate><author>cr4sh@sigkill.no (cr4sh0v3rrid3)</author>
      <guid>https://sigkill.no/blog/alacritty_terminfo/</guid>
      <description>To get alacritty to work with remote hosts:&#xA;$ infocmp &amp;gt; al.txt $ scp al.txt &amp;lt;user&amp;gt;@&amp;lt;host&amp;gt;:~/ # On the remote host: $ tic -x al.txtWhat does &amp;ldquo;tic -x&amp;rdquo; do? $ man tic ... -x Treat unknown capabilities as user-defined (see user_caps(5)). That is, if you supply a capability name which tic does not recognize, it will infer its type (Boolean, number or string) from the syntax and make an extended table entry for that.</description>
      <content:encoded><![CDATA[<p>To get alacritty to work with remote hosts:</p>





<pre tabindex="0"><code>$ infocmp &gt; al.txt
$ scp al.txt &lt;user&gt;@&lt;host&gt;:~/

# On the remote host:
$ tic -x al.txt</code></pre><h3 id="what-does-tic--x-do">What does &ldquo;tic -x&rdquo; do?</h3>





<pre tabindex="0"><code>$ man tic
...
       -x   Treat unknown capabilities as user-defined (see user_caps(5)).  That is, if you supply a capability name which tic does not  recognize,  it  will  infer  its  type
            (Boolean,  number  or string) from the syntax and make an extended table entry for that.  User-defined capability strings whose name begins with “k” are treated as
            function keys.
...</code></pre><h2 id="one-liner">One liner</h2>
<p>Note: this is stolen from the <a href="https://wiki.archlinux.org/title/Alacritty#Terminal_functionality_unavailable_in_remote_shells">archwiki</a></p>





<pre tabindex="0"><code>$ infocmp | ssh &#34;$user@$host&#34; &#39;tic -x /dev/stdin&#39;</code></pre>]]></content:encoded>
    </item>
  </channel>
</rss>
